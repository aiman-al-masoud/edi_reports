1)

USE FIREFOX 

network.http.max-persistent-connections-per-server

HTTP1 websites: better with many connections (because they leverage sharding)

HTTP2 websites: better with a single connection


# Mainly HTTP1

https://web.unipv.it/

https://www.pythonanywhere.com/

https://www.mit.edu/

# Mainly HTTP2

https://www.amazon.it/

https://github.com/

https://archive.org/

https://stackoverflow.com/

# Unsecure (and HTTP1)

http://maxgames.com/

http://go.com/

http://mclab.unipv.it/


# Mainly HTTP3

https://www.chess.com/


Expectation: http1 websites will fare better (load up faster) when the number of parallel connections they can use is increased. There is no expected difference for http2 websites.










2) 
USE FIREFOX 
Remember to enable cache if using firefox

same set of websites

check out caching headers and object sizes, do an average using script in headers-and-sizes/

page 73 on notes

Hyp:
page load time is proportional to amount of cached content and inversely proportional to average object size.


3)

Same websites.

Use ab with different parameters

ab ONLY WORKS WITH HTTP1

n: number of requests
c: concurrency
k: http keep alive

ab -k -c 1 -n 1 example.com/

other options:
-w: output html table (could simplify parsing, use Pandas)


4) 



Ok, it's a parameter of h2load
--warm-up-time

Check with Wireshark what warm-up-time does, it is supposed to start a connection with the website before the actual exchange of data.


h2load --warm-up-time 10 https://www.google.com --duration 10


nghttp -asvvv https://www.google.com



----------------------------------
installations:

h2load and nghttp
sudo apt install nghttp2-client

ab
sudo apt install apache2-utils



